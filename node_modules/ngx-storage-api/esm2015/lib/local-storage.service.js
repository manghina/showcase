import { Injectable } from '@angular/core';
import { filter } from 'rxjs/operators';
import { StorageListenerService } from './storage-listener.service';
import { StorageProxy } from './storage-proxy';
import * as i0 from "@angular/core";
import * as i1 from "./storage-listener.service";
export class LocalStorageService extends StorageProxy {
    constructor(storageListenerService) {
        super(localStorage);
        this.storageListenerService = storageListenerService;
    }
    /**
     * Listens for `localStorage` StorageEvent events
     *
     * @returns
     * An Observable which listens to `window` storage events, and filters
     * those which relevant to `localStorage`
     */
    get localStorage$() {
        return this.storageListenerService.storage$.pipe(filter(event => (event === null || event === void 0 ? void 0 : event.storageArea) === localStorage));
    }
}
LocalStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(i0.ɵɵinject(i1.StorageListenerService)); }, token: LocalStorageService, providedIn: "root" });
LocalStorageService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
LocalStorageService.ctorParameters = () => [
    { type: StorageListenerService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXN0b3JhZ2UtYXBpL3NyYy9saWIvbG9jYWwtc3RvcmFnZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBSy9DLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxZQUFZO0lBQ25ELFlBQTZCLHNCQUE4QztRQUN6RSxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7UUFETywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0lBRTNFLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCxJQUFJLGFBQWE7UUFDZixPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUM5QyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxXQUFXLE1BQUssWUFBWSxDQUFDLENBQ3JELENBQUM7SUFDSixDQUFDOzs7O1lBbkJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7O1lBTFEsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgU3RvcmFnZUxpc3RlbmVyU2VydmljZSB9IGZyb20gJy4vc3RvcmFnZS1saXN0ZW5lci5zZXJ2aWNlJztcbmltcG9ydCB7IFN0b3JhZ2VQcm94eSB9IGZyb20gJy4vc3RvcmFnZS1wcm94eSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBMb2NhbFN0b3JhZ2VTZXJ2aWNlIGV4dGVuZHMgU3RvcmFnZVByb3h5IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBzdG9yYWdlTGlzdGVuZXJTZXJ2aWNlOiBTdG9yYWdlTGlzdGVuZXJTZXJ2aWNlKSB7XG4gICAgc3VwZXIobG9jYWxTdG9yYWdlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMaXN0ZW5zIGZvciBgbG9jYWxTdG9yYWdlYCBTdG9yYWdlRXZlbnQgZXZlbnRzXG4gICAqXG4gICAqIEByZXR1cm5zXG4gICAqIEFuIE9ic2VydmFibGUgd2hpY2ggbGlzdGVucyB0byBgd2luZG93YCBzdG9yYWdlIGV2ZW50cywgYW5kIGZpbHRlcnNcbiAgICogdGhvc2Ugd2hpY2ggcmVsZXZhbnQgdG8gYGxvY2FsU3RvcmFnZWBcbiAgICovXG4gIGdldCBsb2NhbFN0b3JhZ2UkKCk6IE9ic2VydmFibGU8U3RvcmFnZUV2ZW50PiB7XG4gICAgcmV0dXJuIHRoaXMuc3RvcmFnZUxpc3RlbmVyU2VydmljZS5zdG9yYWdlJC5waXBlKFxuICAgICAgZmlsdGVyKGV2ZW50ID0+IGV2ZW50Py5zdG9yYWdlQXJlYSA9PT0gbG9jYWxTdG9yYWdlKVxuICAgICk7XG4gIH1cbn1cbiJdfQ==